# MySQL + Node + React
# Note: to watch the database through a host UI (Workbench/phpmyadmin), add port mapping to database container, e.g. 3307:3306.
# Note: for hot-reloading dockerized React, use: "start": "WATCHPACK_POLLING=true react-scripts start" in package.json, although this command isn't stable and also not working when running non-dockerized react.

version: "3.8"

services:

  # Northwind MySQL service:
  database-service:

    # Image name to create from Dockerfile:
    image: assaffink/northwind-database-image:1.0

    # Build the image from specified Dockerfile location:
    build: ./Database

    # Container name:
    container_name: northwind-database-container

    # On crash - restart container, unless manually stopped:
    restart: unless-stopped

    # Environment variables needed by MySQL:
    environment:
      MYSQL_HOST: localhost # Internally for the container.
      MYSQL_USER: Alice
      MYSQL_PASSWORD: Wonderland
      MYSQL_DATABASE: northwind # Case-Sensitive!
      MYSQL_ROOT_PASSWORD: Wonderland # Needed by MySQL image.

    # Named Volume for persisting MySQL from container to host:
    volumes:
      - northwind-volume:/var/lib/mysql

# -----------------------------------------------------------------------

  # REST API service: 
  backend-service:

    # On which service we're depending on (for starting/stopping order):
    depends_on: 
      - database-service

    # Image name to create from Dockerfile:
    image: assaffink/northwind-backend-image:1.0

    # Build the image from specified Dockerfile location:
    build: ./Backend

    # Container name:
    container_name: northwind-backend-container

    # Port mapping (host:container), both the same so frontend will work same when running with or without docker:
    ports:
      - 81:4000

    # On crash - restart container, unless manually stopped:
    restart: unless-stopped

    # Hot-Reloading Host Volume: mount development ./src to container /app/src:
    volumes:
      - ./Backend/src:/app/src

    # Overriding environment variables needed by the dockerized REST API:
    environment:
      MYSQL_HOST: database-service # Above database service name is the database computer name in a container network created by docker, thus the backend can connect directly to the database using "database-service:3306".
      MYSQL_USER: Alice
      MYSQL_PASSWORD: Wonderland
      MYSQL_DATABASE: northwind

# -----------------------------------------------------------------------

  # Northwind frontend service: 
  frontend-service:

    # On which service we're depending on (starting/stopping order):
    depends_on:
      - backend-service

    # Image name to create from Dockerfile:
    image: assaffink/northwind-frontend-image:1.0

    # Build the image from specified Dockerfile location:
    build: ./Frontend
    
    # Container name:
    container_name: northwind-frontend-container

    # Port mapping (host:container):
    ports:
      - 80:3000

    # On crash - restart container, unless manually stopped:
    restart: unless-stopped

    # Hot-Reloading Host Volume: mount development ./src to container /app/src (suppose to work only when using: "start": "WATCHPACK_POLLING=true react-scripts start" in package.json):
    volumes:
      - ./Frontend/src:/app/src

# -----------------------------------------------------------------------

# Named Volume list:
volumes:
  northwind-volume:
